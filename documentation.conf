extensionName = "table"
markdownTemplate = """
# NetLogo Table Extension

{{#include}}BUILDING.md{{/include}}

{{#include}}USING.md{{/include}}

## Primitives

{{#contents}}{{#prims}}
[`{{name}}`](#{{primitive.extensionName}}{{primitive.name}})
{{/prims}}{{/contents}}

{{#allPrimitives}}
{{{.}}}
{{/allPrimitives}}

{{#include}}LICENSE.md{{/include}}
"""
primTemplate = """
### `{{name}}`

```NetLogo
{{#examples}}
{{primitive.fullName}}{{#args}} {{name}}{{/args}}
{{/examples}}
```

{{{description}}}
"""
filesToIncludeInManual = [ "BUILDING.md", "USING.md", "primitives" ]
additionalVariables = {
  netlogoUrl: "http://ccl.northwestern.edu/netlogo/docs/"
}
primitives = [
  {
    name: clear,
    type: command,
    arguments: [ { type: table } ],
    description: "Removes all key-value pairs from *table*."
  },
  {
    name: counts,
    type: reporter,
    returns: table,
    arguments: [ { type: list} ],
    description: "Counts the occurrences of each element of the given list and reports the counts in a table."
  },
  {
    name: from-list,
    type: reporter,
    returns: table,
    arguments: [ { type: list } ],
    description: """
Reports a new table with the contents of *list*.
*list* must be a list of two element lists, or pairs.
The first element in the pair is the key and the second element is the value.
"""
  },
  {
    name: get,
    type: reporter,
    returns: anything,
    arguments: [ { type: table }, { name: key, type: anything } ],
    description: "Reports the value that *key* is mapped to in the table. Causes an error if there is no entry for the key."
  },
  {
    name: "has-key?",
    type: reporter,
    returns: boolean,
    arguments: [ { type: table}, { name: key, type: anything } ],
    description: "Reports true if *key* has an entry in *table*."
  },
  {
    name: keys,
    type: reporter,
    returns: list,
    arguments: [ { type : table } ],
    description: "Reports a list of all the keys in *table*, in the same order the keys were inserted."
  },
  {
    name: length,
    type: reporter,
    returns: number,
    arguments: [ { type: table } ],
    description: "Reports the number of entries in *table*."
  },
  {
    name: make,
    type: reporter,
    returns: table,
    description: "Reports a new, empty table."
  },
  {
    name: put,
    type: command,
    arguments: [ { type: table }, { name: key, type: anything }, { name: value, type: anything } ],
    description: "Maps *key* to *value* in *table*. If an entry already exists in the table for the given key, it is replaced."
  },
  {
    name: remove,
    type: command,
    arguments: [ { type: table }, { name: key, type: anything } ],
    description: "Removes the mapping in *table* for *key*."
  },
  {
    name: to-list,
    type: reporter,
    returns: list,
    arguments: [ { type: table } ],
    description: """
Reports a list with the content of <i>table</i>. The list will be a
list of two element lists, or pairs. The first element in the pair is
the key and the second element is the value. The keys appear in the
same order they were inserted."""
  }
]
